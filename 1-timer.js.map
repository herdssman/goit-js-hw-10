{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nimport iziToast from \"izitoast\";\n\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate;\nconst btn = document.querySelector('[data-start]');\nconst input = document.querySelector('#datetime-picker');\n\nbtn.disabled = true;\n\nflatpickr(\"#datetime-picker\", {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      userSelectedDate = selectedDates[0];\n        if (userSelectedDate < new Date()) {\n            iziToast.error({\n                message: 'Please choose a date in the future',\n            });\n            btn.disabled = true;\n        } else {\n            btn.disabled = false;\n      }\n    }\n});\n\nbtn.addEventListener(\"click\", () => {\n    input.disabled = true;\n    btn.disabled = true;\n\n    const interval = setInterval(() => {\n        const timeLeft = userSelectedDate - Date.now();\n\n        if (timeLeft <= 0) {\n            clearInterval(interval);\n            input.disabled = false;\n            btn.disabled = true;\n            return;\n        }\n\n        const { days, hours, minutes, seconds } = convertMs(timeLeft);\n\n        document.querySelector('[data-days]').textContent = addLeadingZero(days);\n        document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n        document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n        document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n\n    }, 1000)\n});\n\nfunction addLeadingZero(value) {\n    return value.toString().padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}"],"names":["userSelectedDate","btn","input","flatpickr","selectedDates","iziToast","interval","timeLeft","days","hours","minutes","seconds","convertMs","addLeadingZero","value","ms"],"mappings":"0IAQA,IAAIA,EACJ,MAAMC,EAAM,SAAS,cAAc,cAAc,EAC3CC,EAAQ,SAAS,cAAc,kBAAkB,EAEvDD,EAAI,SAAW,GAEfE,EAAU,mBAAoB,CAC1B,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBJ,EAAmBI,EAAc,CAAC,EAC5BJ,EAAmB,IAAI,MACvBK,EAAS,MAAM,CACX,QAAS,oCACzB,CAAa,EACDJ,EAAI,SAAW,IAEfA,EAAI,SAAW,EAEtB,CACL,CAAC,EAEDA,EAAI,iBAAiB,QAAS,IAAM,CAChCC,EAAM,SAAW,GACjBD,EAAI,SAAW,GAEf,MAAMK,EAAW,YAAY,IAAM,CAC/B,MAAMC,EAAWP,EAAmB,KAAK,IAAG,EAE5C,GAAIO,GAAY,EAAG,CACf,cAAcD,CAAQ,EACtBJ,EAAM,SAAW,GACjBD,EAAI,SAAW,GACf,MACH,CAED,KAAM,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAQ,EAE5D,SAAS,cAAc,aAAa,EAAE,YAAcM,EAAeL,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcK,EAAeJ,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcG,EAAeF,CAAO,CAEhF,EAAE,GAAI,CACX,CAAC,EAED,SAASE,EAAeC,EAAO,CAC3B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CAC3C,CAEA,SAASF,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}